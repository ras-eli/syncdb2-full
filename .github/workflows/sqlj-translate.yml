name: SQLJ Translate & Commit

on:
  workflow_dispatch:         # Deutsch: Manuell starten
  push:
    paths:
      - "sqlj-module-demo/src/main/sqlj/**"   # Deutsch: Modulpfad überwachen

permissions:
  contents: write            # Deutsch: Commit/Push erlauben

jobs:
  translate:
    runs-on: ubuntu-latest   # Deutsch: Linux-Runner

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0     # Deutsch: komplette Historie

      - name: Pull Db2 image (fixed tag)
        run: docker pull ibmcom/db2:11.5.8.0   # Deutsch: reproduzierbare Version

      - name: Translate SQLJ in Docker (offline, no checker)
        run: |
          # Deutsch: Zielordner im Modul vorbereiten
          mkdir -p sqlj-module-demo/src/main/generated-sources/sqlj

          # Deutsch: Container starten, EntryPoint überschreiben, Lizenz akzeptieren
          docker run --rm --entrypoint /bin/bash -e LICENSE=accept -v "$PWD:/work" ibmcom/db2:11.5.8.0 -lc '
            set -e

            # Deutsch: JRE 11 ohne Paketmanager installieren (Adoptium Binary)
            mkdir -p /opt/jre
            curl -L -o /tmp/jre11.tgz https://github.com/adoptium/temurin11-binaries/releases/latest/download/OpenJDK11U-jre_x64_linux_hotspot.tar.gz
            tar -xzf /tmp/jre11.tgz -C /opt/jre --strip-components=1
            export PATH=/opt/jre/bin:$PATH
            java -version

            # Deutsch: Modulpfade
            MOD="/work/sqlj-module-demo"
            OUT="$MOD/src/main/generated-sources/sqlj"
            SRC="$MOD/src/main/sqlj"

            mkdir -p "$OUT"

            if [ -d "$SRC" ]; then
              # Deutsch: Alle .sqlj-Dateien offline (ohne DB-Checker) übersetzen
              find "$SRC" -name "*.sqlj" -print0 | \
              xargs -0 -I{} /opt/ibm/db2/V11.5/bin/sqlj \
                -d "$OUT" \
                -status -noChecker -profile db2 -collection APP "{}"
            else
              echo "No $SRC directory found; skipping."
            fi
          '

      - name: Show changes
        run: git status --porcelain   # Deutsch: Änderungen anzeigen

      - name: Commit & Push if generated sources changed
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name  "github-actions[bot]"          # Deutsch: CI-Author
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add sqlj-module-demo/src/main/generated-sources/sqlj
            git commit -m "ci: translate SQLJ -> Java (offline)"
            git push
          else
            echo "No changes to commit."
          fi
